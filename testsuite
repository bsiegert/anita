#!/bin/sh
#
# Anita test suite.  This mainly tests that installation of historic
# NetBSD versions still works.
#

python=python2.7

while [ $# -gt 0 ]
do
    case $1 in
        --python)
            shift
            python="$1"
            ;;
        *)
            echo "unknown option $1" >&2
            exit 1
            ;;
    esac
    shift
done

set -x -e

logdir=log/testsuite.log.`date +%Y%m%d-%H%M%S`
echo "logging to $logdir"

mkdir -p $logdir

runtest() {
    mode=$1
    shift
    workdir=`$python ./anita print-workdir "$@"`
    logfile=$logdir/$workdir
    test ! -f $logfile || echo "warning: $logfile exists"
    rm -f $workdir/wd0.img
    (
        set -x -e
        $python ./anita --structured-log $mode --image-format sparse "$@"
        rm -f $workdir/wd0.img
        echo "passed"
    ) >$logfile 2>&1 &
}

# Test a local hpcmips build, if available
# This does only an install because the boot stage doesn't work yet.
hpcmips_build=$(pwd)/test-data/local-builds/2017.07.01.06.14.51/hpcmips/
if test -d $hpcmips_build
then
    runtest install $hpcmips_build
fi

# Test a local ARM build, if available
arm_build=$(pwd)/test-data/local-builds/2017.06.20.13.51.54/evbarm-earmv7hf/
if test -d $arm_build
then
    # Does not work reliably in current qemu
    : runtest boot $arm_build
fi

# Test an installation with debug symbols and partial source
# With 32M of memory, we hit the "stalled" problem (PR 47030)
debug_build=$(pwd)/test-data/local-builds/2017.06.20.13.51.54/i386/
if test -d $debug_build
then
    runtest "--memory-size=128M --disk-size=2G --sets=kern-GENERIC,etc,base,tests,games,misc,syssrc boot" $debug_build
fi

# Test a FTP URL, too
runtest install ftp://ftp.netbsd.org/pub/NetBSD/NetBSD-archive/NetBSD-2.1/i386/

runtest install http://ftp.netbsd.org/pub/NetBSD/NetBSD-archive/NetBSD-3.0.1/i386/
runtest boot http://ftp.netbsd.org/pub/NetBSD/NetBSD-archive/NetBSD-4.0/i386/
runtest boot http://ftp.netbsd.org/pub/NetBSD/NetBSD-archive/NetBSD-5.0.2/i386/
runtest boot http://ftp.netbsd.org/pub/NetBSD/NetBSD-archive/NetBSD-5.1.5/i386/

# These fail with "piixide0:0:0: lost interrupt" (tested with qemu 2.2.0)
# runtest boot http://ftp.fi.netbsd.org/pub/NetBSD/NetBSD-5.2/i386/
# runtest boot http://ftp.fi.netbsd.org/pub/NetBSD/NetBSD-5.2.3/i386/

runtest boot http://ftp.fi.netbsd.org/pub/NetBSD/NetBSD-6.0/amd64/

# Test CD boot
runtest "--boot-from cdrom boot" http://ftp.fi.netbsd.org/pub/NetBSD/NetBSD-7.2/amd64/

# Test newest version
runtest boot http://ftp.netbsd.org/pub/NetBSD/NetBSD-8.0/amd64/

# This panics with qemu 2.0.0, and fails due to the message
# "esp0: !TC on DATA XFER [intr 18, stat 82, step 4] prevphase 2, resid 0"
# being printed during set extraction with qemu 2.9.0.
#runtest boot http://ftp.fi.netbsd.org/pub/NetBSD/NetBSD-6.1.3/images/NetBSD-6.1.3-sparc.iso

# disabled while qemu sparc emulation is broken
#runtest boot http://ftp.netbsd.org/pub/NetBSD/iso/7.2/NetBSD-7.2-sparc.iso

runtest boot http://ftp.netbsd.org/pub/NetBSD/NetBSD-8.0/macppc/

# Test selecting and installing the games set
url=http://ftp.netbsd.org/pub/NetBSD/NetBSD-archive/iso/5.0.2/sparccd-5.0.2.iso
workdir=`$python ./anita print-workdir $url`
logfile=$logdir/$workdir
(
  set -x -e
  rm -f $workdir/wd0.img
  $python ./anita --sets=kern-GENERIC,base,etc,games --run "/usr/games/factor 1234567" boot $url | tee stdout.games
  grep "127 9721" stdout.games
  rm -f stdout.games
  rm -f $workdir/wd0.img
  echo "passed"
) >$logfile 2>&1 &

# Test running the ATF tests
url=http://ftp.netbsd.org/pub/NetBSD/NetBSD-archive/NetBSD-5.1/i386/
workdir=`$python ./anita print-workdir $url`
logfile=$logdir/$workdir
(
  set -x -e
  rm -f $workdir/wd0.img
  $python ./anita --sets=kern-GENERIC,etc,base,tests,games,misc test $url | tee stdout.atf || true
  # This is not to check that tests pass, but only that they at least run to completion
  grep 'passed test cases' stdout.atf
  rm -f stdout.atf
  rm -f $workdir/wd0.img
  echo "passed"
) >$logfile 2>&1 &

# Test anita 1.2 compatibility (in foreground)
logfile=$logdir/7.0.1
(
workdir=netbsd-7.0.1
rm -f $workdir/wd0.img
$python <<END
import anita
ver = anita.Release("7.0.1")
ver.install()
END
rm -f $workdir/wd0.img
echo "passed"
) >$logfile 2>&1 &

wait

pass=true
for f in $logdir/*
do
    if tail -1 $f | grep 'passed' >/dev/null
    then
        :
    else
        pass=false
   fi
done

$pass

#!/usr/pkg/bin/python2.4

import sys
import re
import anita
from optparse import OptionParser

class Usage(Exception):
    def __init__(self, msg):
        self.msg = msg

def main(argv = None):
    if argv is None:
        argv = sys.argv

    parser = OptionParser(usage = "usage: %prog [options] install|boot|interact distribution")
    parser.add_option("--workdir",
		      help="store work files in DIR", metavar="DIR")
    parser.add_option("--qemu-args",
		      help="pass ARGS as extra arguments to qemu", metavar="ARGS")
    (options, args) = parser.parse_args()

    if len(args) < 2:
	raise Usage("not enough arguments")

    distarg = args[1]
    if re.match(r'/', distarg):
	if not re.search(r'/$', distarg):
	    raise Usage("distribution directory should end in a slash")
	dist = anita.LocalDirectory(distarg)
    elif re.match(r'[a-z0-9\.0-]+:', distarg):
	if not re.search(r'/$', distarg):
	    raise Usage("distribution URL should end in a slash")
	dist = anita.URL(distarg)
    else:
	raise Usage("expected distribution URL or directory, got " + distarg)

    if options.qemu_args:
        qemu_args = options.qemu_args.split()
    else:
        qemu_args = []

    a = anita.Anita(dist, workdir = options.workdir, qemu_args = qemu_args)

    status = 0
    mode = args[0]
    if mode == 'install':
	a.install()
    elif mode == 'boot':
	a.boot()
    elif mode == 'interact':
	a.interact()
    elif mode == 'test':
	child = a.boot()
	status = anita.test(child)
    else:
	raise Usage("unknown mode: " + mode)
    return status

if __name__ == "__main__":
    try:
        status = main()
	sys.exit(status)
    except Usage, err:
        print >>sys.stderr, err.msg
        print >>sys.stderr, "for help use --help"
        sys.exit(1)
